<Project DefaultTargets="Restore">
  <Import Project="Directory.Build.props" />

  <PropertyGroup>
    <PackagesTempPath>$(PackagesOutputPath)/tmp</PackagesTempPath>
  </PropertyGroup>

  <ItemGroup>
    <!--<PackageReference Include="ZoneTree" />-->
  </ItemGroup>

  <Target Name="Restore" Condition="@(PackageReference->Count()) != 0">
    <ItemGroup>
      <MakeDir Directories="$(PackagesOutputPath)" Condition="'$(WhatIfDownloadPackages)' != 'true'" />

      <PackageDownload Include="@(PackageReference)"
          DownloadUrl="https://pkgs.dev.azure.com/ref12/Dependencies/_apis/packaging/feeds/Packages/nuget/packages/%(Identity)/versions/%(Version)/content?api-version=6.0-preview.1"
          OutputPath="$(PackagesTempPath)/%(Identity).%(Version).nupkg"/>

      <PackageDownload Include="nuget.exe" DownloadUrl="https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" OutputPath="$(PackagesOutputPath)/nuget.exe"/>

      <PackageDownload CommandLine="curl -L -o %(OutputPath) %(DownloadUrl)" Exists="false" ShouldDownload="false" />
      <PackageDownload Exists="true" Condition="Exists('%(OutputPath)')"/>

      <PackageDownload ShouldDownload="true" Condition="'%(Exists)' != 'true' or '$(OverwriteDownloadPackages)' == 'true'"/>
    </ItemGroup>

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName(%(PackageDownload.OutputPath)))" Condition="'$(WhatIfDownloadPackages)' != 'true'" />

    <Message Importance="high" Text="%(PackageDownload.CommandLine) Exists=%(Exists) ShouldDownload=%(ShouldDownload) " />
    <Exec Command="%(PackageDownload.CommandLine)" Condition="%(ShouldDownload) and '$(WhatIfDownloadPackages)' != 'true'" />
    <Exec Command="$(PackagesOutputPath)/nuget.exe init $(PackagesTempPath) $(PackagesOutputPath)" Condition="'$(WhatIfDownloadPackages)' != 'true'" />

    <!--<Delete Files="%(PackageDownload.OutputPath)" />-->
  </Target>

  <Import Project="Directory.Build.targets" />
</Project>
